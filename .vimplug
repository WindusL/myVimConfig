call plug#begin('~/.vim/plugged')

" 导航插件
Plug 'scrooloose/nerdtree'
" 文件标签导航 
Plug 'vim-scripts/taglist.vim'
" 文件查找
Plug 'Yggdroot/LeaderF', { 'do': './install.sh' }
" 注释
Plug 'scrooloose/nerdcommenter'
" 彩虹括号
Plug 'luochen1990/rainbow'
" 自动补全括号
Plug 'jiangmiao/auto-pairs'
" 关键字高亮
Plug 'vim-scripts/TagHighlight'
" 状态栏
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
" 有道翻译插件
Plug 'ianva/vim-youdao-translater'
" vim中文文档
Plug 'yianwillis/vimcdoc'
" 前端emmet插件
Plug 'vim-scripts/Emmet.vim'
" python模式
Plug 'python-mode/python-mode', { 'for': 'python', 'branch': 'develop' }
" 语法检测
Plug 'w0rp/ale'
" 代码格式化
Plug 'Chiel92/vim-autoformat'
" 代码提示
Plug 'neoclide/coc.nvim', {'branch': 'release'}
" 代码运行
Plug 'skywind3000/asyncrun.vim'
" 版本库不同比较
Plug 'mhinz/vim-signify'
" markdown 
Plug 'godlygeek/tabular'
Plug 'plasticboy/vim-markdown'

call plug#end()


let g:mapleader = ","

"-------------------------------------------------------------------------------
" nerdtree Setting
"-------------------------------------------------------------------------------
" 切换导航窗口
nnoremap <leader>1  :<C-u>NERDTreeToggle<CR>

"-------------------------------------------------------------------------------
" emmet Setting
"-------------------------------------------------------------------------------

let g:user_emmet_expandabbr_key = '<c-e>'
let g:use_emmet_complete_tag = 1


"-------------------------------------------------------------------------------
" 有道翻译 Setting
"-------------------------------------------------------------------------------

vnoremap <silent>  ≈ :<C-u>Ydv<CR>
nnoremap <silent> ≈ :<C-u>Ydc<CR>
"noremap <leader>yd :<C-u>Yde<CR>
nnoremap Ω :<C-u>Yde<CR>

"-------------------------------------------------------------------------------
" rainbow Setting
"-------------------------------------------------------------------------------

"0 if you want to enable it later via :rainbowtoggle
let g:rainbow_active = 1
let g:rainbow_conf = {
	\	'guifgs': ['royalblue3', 'darkorange3', 'seagreen3', 'firebrick'],
	\	'ctermfgs': ['lightblue', 'lightyellow', 'lightcyan', 'lightmagenta'],
	\	'operators': '_,_',
	\	'parentheses': ['start=/(/ end=/)/ fold', 'start=/\[/ end=/\]/ fold', 'start=/{/ end=/}/ fold'],
	\	'separately': {
	\		'*': {},
	\		'tex': {
	\			'parentheses': ['start=/(/ end=/)/', 'start=/\[/ end=/\]/'],
	\		},
	\		'lisp': {
	\			'guifgs': ['royalblue3', 'darkorange3', 'seagreen3', 'firebrick', 'darkorchid3'],
	\		},
	\		'vim': {
	\			'parentheses': ['start=/(/ end=/)/', 'start=/\[/ end=/\]/', 'start=/{/ end=/}/ fold', 'start=/(/ end=/)/ containedin=vimfuncbody', 'start=/\[/ end=/\]/ containedin=vimfuncbody', 'start=/{/ end=/}/ fold containedin=vimfuncbody'],
	\		},
	\		'html': {
	\			'parentheses': ['start=/\v\<((area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)[ >])@!\z([-_:a-za-z0-9]+)(\s+[-_:a-za-z0-9]+(\=("[^"]*"|'."'".'[^'."'".']*'."'".'|[^ '."'".'"><=`]*))?)*\>/ end=#</\z1># fold'],
	\		},
	\		'css': 0,
	\	}
	\}


"-------------------------------------------------------------------------------
" python-mode Setting
"-------------------------------------------------------------------------------

" 禁用每行后面带颜色线条
let g:pymode_options_colorcolumn = 0
" 行最大长度提示
let g:pymode_options_max_line_length = 100
" 设置python-mode sys_path
" let g:pymode_paths = ['', '/users/windus/.pyenv/versions/3.7.3/lib/python37.zip', '/users/windus/.pyenv/versions/3.7.3/lib/python3.7', '/users/windus/.pyenv/versions/3.7.3/lib/python3.7/lib-dyn    load', '/users/windus/.pyenv/versions/3.7.3/lib/python3.7/site-packages']
" run python 快捷键 
let g:pymode_run_bind = '<leader>r'


"-------------------------------------------------------------------------------
" airline Setting
"-------------------------------------------------------------------------------

" Integrating with powerline fonts
let g:airline_powerline_fonts = 1
" beautify tab line
let g:airline#extensions#tabline#enabled = 1
" airline Theme
let g:airline_theme = 'bubblegum'


"-------------------------------------------------------------------------------
" coc-nvim Setting
"-------------------------------------------------------------------------------


"-------------------------------------------------------------------------------
" asyncrun Setting
"-------------------------------------------------------------------------------
" 定位项目根路径(非版本控抽管理项目可在根目录创建一个`.root`空文件)
let g:asyncrun_rootmarks = ['.svn', '.git', '.root', '_darcs', 'build.xml']

" 设置运行窗口高度
let g:asyncrun_open = 10

" ring the bell to notify you job finished
let g:asyncrun_bell = 1

" F10 to toggle quickfix window
nnoremap <F10> :call asyncrun#quickfix_toggle(10)<cr>

" complie single c/c++ file
nnoremap <silent> <F9> :AsyncRun cc -std=c99 -Wall "$(VIM_FILEPATH)" -o "$(VIM_ROOT)/built/$(VIM_FILENOEXT)" <cr>
" run single c/c++ file
nnoremap <silent> <F5> :AsyncRun -raw -cwd=$(VIM_ROOT) "$(VIM_ROOT)/built/$(VIM_FILENOEXT)" <cr>

"-------------------------------------------------------------------------------
" markdown Setting
"-------------------------------------------------------------------------------

let g:vim_markdown_folding_disabled = 1  " 不折叠显示，默认是折叠显示，看个人习惯
let g:vim_markdown_override_foldtext = 0  
let g:vim_markdown_folding_level = 6    " 可折叠的级数，对应md的标题级别
let g:vim_markdown_no_default_key_mappings = 1
let g:vim_markdown_emphasis_multiline = 0
" set conceallevel=2
let g:vim_markdown_frontmatter=1


"-------------------------------------------------------------------------------
" ale Setting
"-------------------------------------------------------------------------------

let g:ale_sign_error = "囍"
hi! clear SpellBad
hi! clear SpellCap
hi! clear SpellRare
hi! SpellBad gui=undercurl guisp=red
hi! SpellCap gui=undercurl guisp=blue
hi! SpellRare gui=undercurl guisp=magenta

"-------------------------------------------------------------------------------
" LeaderF Setting
"-------------------------------------------------------------------------------

let g:Lf_ShortcutF = '<c-p>'
noremap <leader>lm  :<c-u>LeaderfMru<cr>
noremap <leader>lf :<c-u>LeaderfFunction!<cr>
noremap <leader>lbt :<c-u>LeaderfBufTag<cr>
let g:Lf_StlSeparator = { 'left': '', 'right': '', 'font': '' }

let g:Lf_RootMarkers = ['.project', '.root', '.svn', '.git']
let g:Lf_WorkingDirectoryMode = 'Ac'
let g:Lf_WindowHeight = 0.30
let g:Lf_CacheDirectory = expand('~/.vim/cache')
let g:Lf_ShowRelativePath = 0
let g:Lf_HideHelp = 1
let g:Lf_StlColorscheme = 'powerline'
let g:Lf_PreviewResult = {'Function':0, 'BufTag':0}


"-------------------------------------------------------------------------------
" autoformat Setting
"-------------------------------------------------------------------------------

" 格式化代码快捷键
noremap <leader>cf :<c-u>Format<cr>:<c-u>Autoformat<cr>
" 打开终端窗口
nnoremap <leader>2 :<C-u>ter ++rows=15<CR>
